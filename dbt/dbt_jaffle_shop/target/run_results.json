{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.8.8", "generated_at": "2025-01-03T12:23:09.947984Z", "invocation_id": "64ec8c3c-0202-48b0-9ec3-446265d1dd5d", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-03T12:23:02.534032Z", "completed_at": "2025-01-03T12:23:08.791365Z"}, {"name": "execute", "started_at": "2025-01-03T12:23:08.793302Z", "completed_at": "2025-01-03T12:23:08.793302Z"}], "thread_id": "Thread-1", "execution_time": 6.932116508483887, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_jaffle_shop.dates", "compiled": true, "compiled_code": "\n\n\n    \nwith base_dates as (\n    \n    with date_spine as\n(\n\n    \n\n\n\n\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * power(2, 0)\n     + \n    \n    p1.generated_number * power(2, 1)\n     + \n    \n    p2.generated_number * power(2, 2)\n     + \n    \n    p3.generated_number * power(2, 3)\n     + \n    \n    p4.generated_number * power(2, 4)\n     + \n    \n    p5.generated_number * power(2, 5)\n     + \n    \n    p6.generated_number * power(2, 6)\n     + \n    \n    p7.generated_number * power(2, 7)\n     + \n    \n    p8.generated_number * power(2, 8)\n     + \n    \n    p9.generated_number * power(2, 9)\n     + \n    \n    p10.generated_number * power(2, 10)\n     + \n    \n    p11.generated_number * power(2, 11)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n     cross join \n    \n    p as p11\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 4017\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n\n    dateadd(\n        day,\n        (row_number() over (order by 1) - 1),\n        cast('2015-01-01' as timestamp)\n        )\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= cast('2025-12-31' as timestamp)\n\n)\n\nselect * from filtered\n\n\n\n)\nselect\n    cast(d.date_day as timestamp) as date_day\nfrom\n    date_spine d\n\n\n),\ndates_with_prior_year_dates as (\n\n    select\n        cast(d.date_day as date) as date_day,\n        cast(\n\n    dateadd(\n        year,\n        -1,\n        d.date_day\n        )\n\n as date) as prior_year_date_day,\n        cast(\n\n    dateadd(\n        day,\n        -364,\n        d.date_day\n        )\n\n as date) as prior_year_over_year_date_day\n    from\n    \tbase_dates d\n\n)\nselect\n    d.date_day,\n    cast(\n\n    dateadd(\n        day,\n        -1,\n        d.date_day\n        )\n\n as date) as prior_date_day,\n    cast(\n\n    dateadd(\n        day,\n        1,\n        d.date_day\n        )\n\n as date) as next_date_day,\n    d.prior_year_date_day as prior_year_date_day,\n    d.prior_year_over_year_date_day,\n    case\n            when date_part('dayofweek', d.date_day) = 7 then 1\n            else date_part('dayofweek', d.date_day) + 1\n        end as day_of_week,\n    date_part('dayofweekiso', d.date_day) as day_of_week_iso,\n    -- long version not implemented on Snowflake so we're doing it manually :/\n    case dayname(d.date_day)\n        when 'Mon' then 'Monday'\n        when 'Tue' then 'Tuesday'\n        when 'Wed' then 'Wednesday'\n        when 'Thu' then 'Thursday'\n        when 'Fri' then 'Friday'\n        when 'Sat' then 'Saturday'\n        when 'Sun' then 'Sunday'\n    end as day_of_week_name,\n    dayname(d.date_day) as day_of_week_name_short,\n    date_part('day', d.date_day) as day_of_month,\n    date_part('dayofyear', d.date_day) as day_of_year,\n\n    \n    \n    cast(\n\n    dateadd(\n        day,\n        -1 * (case\n            when date_part('dayofweek', d.date_day) = 7 then 1\n            else date_part('dayofweek', d.date_day) + 1\n        end - 1),\n        d.date_day\n        )\n\n as date) as week_start_date,\n    cast(\n\n    dateadd(\n        day,\n        6,\n        \n    \n    cast(\n\n    dateadd(\n        day,\n        -1 * (case\n            when date_part('dayofweek', d.date_day) = 7 then 1\n            else date_part('dayofweek', d.date_day) + 1\n        end - 1),\n        d.date_day\n        )\n\n as date)\n        )\n\n as date) as week_end_date,\n    \n    \n    cast(\n\n    dateadd(\n        day,\n        -1 * (case\n            when date_part('dayofweek', d.prior_year_over_year_date_day) = 7 then 1\n            else date_part('dayofweek', d.prior_year_over_year_date_day) + 1\n        end - 1),\n        d.prior_year_over_year_date_day\n        )\n\n as date) as prior_year_week_start_date,\n    cast(\n\n    dateadd(\n        day,\n        6,\n        \n    \n    cast(\n\n    dateadd(\n        day,\n        -1 * (case\n            when date_part('dayofweek', d.prior_year_over_year_date_day) = 7 then 1\n            else date_part('dayofweek', d.prior_year_over_year_date_day) + 1\n        end - 1),\n        d.prior_year_over_year_date_day\n        )\n\n as date)\n        )\n\n as date) as prior_year_week_end_date,\n    cast(date_part('week', d.date_day) as integer) as week_of_year,\n\n    cast(date_trunc('week', d.date_day) as date) as iso_week_start_date,\n    cast(\n\n    dateadd(\n        day,\n        6,\n        cast(date_trunc('week', d.date_day) as date)\n        )\n\n as date) as iso_week_end_date,\n    cast(date_trunc('week', d.prior_year_over_year_date_day) as date) as prior_year_iso_week_start_date,\n    cast(\n\n    dateadd(\n        day,\n        6,\n        cast(date_trunc('week', d.prior_year_over_year_date_day) as date)\n        )\n\n as date) as prior_year_iso_week_end_date,\n    cast(date_part('weekiso', d.date_day) as integer) as iso_week_of_year,\n\n    cast(date_part('week', d.prior_year_over_year_date_day) as integer) as prior_year_week_of_year,\n    cast(date_part('weekiso', d.prior_year_over_year_date_day) as integer) as prior_year_iso_week_of_year,\n\n    cast(date_part('month', d.date_day) as integer) as month_of_year,\n    to_char(d.date_day, 'MMMM')  as month_name,\n    to_char(d.date_day, 'MON')  as month_name_short,\n\n    cast(date_trunc('month', d.date_day) as date) as month_start_date,\n    cast(cast(\n        \n\n    dateadd(\n        day,\n        -1,\n        \n\n    dateadd(\n        month,\n        1,\n        date_trunc('month', d.date_day)\n        )\n\n\n        )\n\n\n        as date) as date) as month_end_date,\n\n    cast(date_trunc('month', d.prior_year_date_day) as date) as prior_year_month_start_date,\n    cast(cast(\n        \n\n    dateadd(\n        day,\n        -1,\n        \n\n    dateadd(\n        month,\n        1,\n        date_trunc('month', d.prior_year_date_day)\n        )\n\n\n        )\n\n\n        as date) as date) as prior_year_month_end_date,\n\n    cast(date_part('quarter', d.date_day) as integer) as quarter_of_year,\n    cast(date_trunc('quarter', d.date_day) as date) as quarter_start_date,\n    cast(cast(\n        \n\n    dateadd(\n        day,\n        -1,\n        \n\n    dateadd(\n        quarter,\n        1,\n        date_trunc('quarter', d.date_day)\n        )\n\n\n        )\n\n\n        as date) as date) as quarter_end_date,\n\n    cast(date_part('year', d.date_day) as integer) as year_number,\n    cast(date_trunc('year', d.date_day) as date) as year_start_date,\n    cast(cast(\n        \n\n    dateadd(\n        day,\n        -1,\n        \n\n    dateadd(\n        year,\n        1,\n        date_trunc('year', d.date_day)\n        )\n\n\n        )\n\n\n        as date) as date) as year_end_date\nfrom\n    dates_with_prior_year_dates d\norder by 1\n\n", "relation_name": "mds_prod.raw.dates"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-03T12:23:09.469032Z", "completed_at": "2025-01-03T12:23:09.479480Z"}, {"name": "execute", "started_at": "2025-01-03T12:23:09.481377Z", "completed_at": "2025-01-03T12:23:09.481377Z"}], "thread_id": "Thread-1", "execution_time": 0.015644073486328125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_jaffle_shop.stg_customers", "compiled": true, "compiled_code": "SELECT \nID as customer_id, \nNAME as customer_name,\n_AIRBYTE_EXTRACTED_AT\nFROM MDS_PROD.RAW.jaffle_customers", "relation_name": "mds_prod.INTERMEDIATE.stg_customers"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-03T12:23:09.488171Z", "completed_at": "2025-01-03T12:23:09.498983Z"}, {"name": "execute", "started_at": "2025-01-03T12:23:09.500724Z", "completed_at": "2025-01-03T12:23:09.500724Z"}], "thread_id": "Thread-1", "execution_time": 0.01630258560180664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_jaffle_shop.stg_items", "compiled": true, "compiled_code": "SELECT\n    ID as item_id,\n    SKU as product_id,\n    order_id,\n    _AIRBYTE_EXTRACTED_AT\nFROM MDS_PROD.RAW.jaffle_items", "relation_name": "mds_prod.INTERMEDIATE.stg_items"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-03T12:23:09.506519Z", "completed_at": "2025-01-03T12:23:09.515679Z"}, {"name": "execute", "started_at": "2025-01-03T12:23:09.517188Z", "completed_at": "2025-01-03T12:23:09.517188Z"}], "thread_id": "Thread-1", "execution_time": 0.01268315315246582, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_jaffle_shop.stg_orders", "compiled": true, "compiled_code": "SELECT\n    ID as order_id,\n    customer as customer_id,\n    store_id,\n    subtotal,\n    tax_paid,\n    order_total,\n    TRY_CAST(ordered_at as TIMESTAMP) as ordered_date\nFROM MDS_PROD.RAW.jaffle_orders", "relation_name": "mds_prod.INTERMEDIATE.stg_orders"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-03T12:23:09.522922Z", "completed_at": "2025-01-03T12:23:09.532155Z"}, {"name": "execute", "started_at": "2025-01-03T12:23:09.534155Z", "completed_at": "2025-01-03T12:23:09.534155Z"}], "thread_id": "Thread-1", "execution_time": 0.013686418533325195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_jaffle_shop.stg_products", "compiled": true, "compiled_code": "SELECT\n    SKU as product_id,\n    NAME as product_name,\n    PRODUCT_TYPE as product_type,\n    PRICE as unit_price,\n    DESCRIPTION as description,\n    _AIRBYTE_EXTRACTED_AT\nFROM MDS_PROD.RAW.jaffle_products", "relation_name": "mds_prod.INTERMEDIATE.stg_products"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-03T12:23:09.541158Z", "completed_at": "2025-01-03T12:23:09.553739Z"}, {"name": "execute", "started_at": "2025-01-03T12:23:09.554739Z", "completed_at": "2025-01-03T12:23:09.554739Z"}], "thread_id": "Thread-1", "execution_time": 0.016275882720947266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_jaffle_shop.stg_salesorders", "compiled": true, "compiled_code": "SELECT \n    ro.id as order_id,\n    ri.id as item_id,\n    ro.customer as customer_id,\n    ro.store_id,\n    ri.sku as product_id,\n    rp.price as subtotal,\n    (rp.price * tax_rate) as tax_paid,\n    rp.price + (rp.price * tax_rate) as order_total,\n    TRY_CAST(ordered_at as TIMESTAMP) as ordered_date,\n    ro._AIRBYTE_EXTRACTED_AT\nFROM MDS_PROD.RAW.jaffle_orders as ro\nJOIN MDS_PROD.RAW.jaffle_items as ri\nON ro.id = ri.order_id\nLEFT JOIN MDS_PROD.RAW.jaffle_products as  rp\nON ri.sku =rp.sku\nLEFT JOIN MDS_PROD.RAW.jaffle_stores as rs\nON ro.store_id =  rs.id", "relation_name": "mds_prod.INTERMEDIATE.stg_salesorders"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-03T12:23:09.561340Z", "completed_at": "2025-01-03T12:23:09.570298Z"}, {"name": "execute", "started_at": "2025-01-03T12:23:09.571866Z", "completed_at": "2025-01-03T12:23:09.571866Z"}], "thread_id": "Thread-1", "execution_time": 0.013624906539916992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_jaffle_shop.stg_stores", "compiled": true, "compiled_code": "SELECT\n    ID store_id,\n    NAME as store_name,\n    tax_rate,\n    CAST(opened_at as DATE) as opened_at,\n    _AIRBYTE_EXTRACTED_AT\nFROM MDS_PROD.RAW.jaffle_stores", "relation_name": "mds_prod.INTERMEDIATE.stg_stores"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-03T12:23:09.578045Z", "completed_at": "2025-01-03T12:23:09.588436Z"}, {"name": "execute", "started_at": "2025-01-03T12:23:09.589436Z", "completed_at": "2025-01-03T12:23:09.589436Z"}], "thread_id": "Thread-1", "execution_time": 0.013928413391113281, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_jaffle_shop.stg_supplies", "compiled": true, "compiled_code": "SELECT\n    ID as supplies_id,\n    SKU as product_id,\n    cost,\n    NAME as supplies_name,\n    perishable,\n    _AIRBYTE_EXTRACTED_AT\nFROM MDS_PROD.RAW.jaffle_supplies", "relation_name": "mds_prod.INTERMEDIATE.stg_supplies"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-03T12:23:09.594085Z", "completed_at": "2025-01-03T12:23:09.600542Z"}, {"name": "execute", "started_at": "2025-01-03T12:23:09.601569Z", "completed_at": "2025-01-03T12:23:09.601569Z"}], "thread_id": "Thread-1", "execution_time": 0.011483192443847656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_jaffle_shop.dim_date", "compiled": true, "compiled_code": "SELECT\n    TRY_CAST(CONCAT(LEFT(DATE_DAY, 4), SUBSTR(DATE_DAY, 6,2), SUBSTR(DATE_DAY, 9,2)) AS INTEGER) AS date_key,\n    *\nFROM mds_prod.raw.dates", "relation_name": "mds_prod.CORE.dim_date"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-03T12:23:09.606570Z", "completed_at": "2025-01-03T12:23:09.630952Z"}, {"name": "execute", "started_at": "2025-01-03T12:23:09.631971Z", "completed_at": "2025-01-03T12:23:09.631971Z"}], "thread_id": "Thread-1", "execution_time": 0.027403593063354492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_jaffle_shop.dim_customers", "compiled": true, "compiled_code": "SELECT \nmd5(cast(coalesce(cast(customer_id as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as customer_key,\ncustomer_id, \ncustomer_name,\n_AIRBYTE_EXTRACTED_AT\nFROM mds_prod.INTERMEDIATE.stg_customers", "relation_name": "mds_prod.CORE.dim_customers"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-03T12:23:09.637105Z", "completed_at": "2025-01-03T12:23:09.645737Z"}, {"name": "execute", "started_at": "2025-01-03T12:23:09.646644Z", "completed_at": "2025-01-03T12:23:09.646644Z"}], "thread_id": "Thread-1", "execution_time": 0.012569189071655273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_jaffle_shop.dim_products", "compiled": true, "compiled_code": "SELECT\n    md5(cast(coalesce(cast(product_id as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as product_key,\n    *\nFROM mds_prod.INTERMEDIATE.stg_products", "relation_name": "mds_prod.CORE.dim_products"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-03T12:23:09.652352Z", "completed_at": "2025-01-03T12:23:09.668335Z"}, {"name": "execute", "started_at": "2025-01-03T12:23:09.669836Z", "completed_at": "2025-01-03T12:23:09.669836Z"}], "thread_id": "Thread-1", "execution_time": 0.020273685455322266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_jaffle_shop.fact_orders", "compiled": true, "compiled_code": "SELECT\n    md5(cast(coalesce(cast(orders.order_id as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(orders.item_id as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as order_key,\n    md5(cast(coalesce(cast(customer_id as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as customer_key,\n    md5(cast(coalesce(cast(store_id as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as store_key,\n    md5(cast(coalesce(cast(product_id as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as product_key,\n    TRY_CAST(CONCAT(LEFT(ordered_date, 4), SUBSTR(ordered_date, 9,2)) AS INTEGER) AS date_key,\n    TRY_CAST(CONCAT(LEFT(ordered_date, 4), SUBSTR(ordered_date, 6,2)) AS INTEGER) AS month_key, --New change\n    orders.order_id as salesorderid,\n    item_id as salesitemid,\n    subtotal,\n    tax_paid, --as tax,\n    order_total,\n    ordered_date\nFROM mds_prod.INTERMEDIATE.stg_salesorders as orders\n/* INNER JOIN mds_prod.INTERMEDIATE.stg_items as items\nON orders.order_id = items.order_id*/", "relation_name": "mds_prod.CORE.fact_orders"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-03T12:23:09.676228Z", "completed_at": "2025-01-03T12:23:09.685149Z"}, {"name": "execute", "started_at": "2025-01-03T12:23:09.686149Z", "completed_at": "2025-01-03T12:23:09.686149Z"}], "thread_id": "Thread-1", "execution_time": 0.013311386108398438, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_jaffle_shop.dim_stores", "compiled": true, "compiled_code": "SELECT\n    md5(cast(coalesce(cast(store_id as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as store_key,\n    *\nFROM mds_prod.INTERMEDIATE.stg_stores", "relation_name": "mds_prod.CORE.dim_stores"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-03T12:23:09.691436Z", "completed_at": "2025-01-03T12:23:09.713913Z"}, {"name": "execute", "started_at": "2025-01-03T12:23:09.715912Z", "completed_at": "2025-01-03T12:23:09.715912Z"}], "thread_id": "Thread-1", "execution_time": 0.027222394943237305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_jaffle_shop.not_null_dim_customers_customer_key.4bebfb3411", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect customer_key\nfrom mds_prod.CORE.dim_customers\nwhere customer_key is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-03T12:23:09.720107Z", "completed_at": "2025-01-03T12:23:09.732105Z"}, {"name": "execute", "started_at": "2025-01-03T12:23:09.733181Z", "completed_at": "2025-01-03T12:23:09.734036Z"}], "thread_id": "Thread-1", "execution_time": 0.015192508697509766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_jaffle_shop.unique_dim_customers_customer_key.ad8156656e", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    customer_key as unique_field,\n    count(*) as n_records\n\nfrom mds_prod.CORE.dim_customers\nwhere customer_key is not null\ngroup by customer_key\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-03T12:23:09.738195Z", "completed_at": "2025-01-03T12:23:09.748226Z"}, {"name": "execute", "started_at": "2025-01-03T12:23:09.749661Z", "completed_at": "2025-01-03T12:23:09.749661Z"}], "thread_id": "Thread-1", "execution_time": 0.013115644454956055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_jaffle_shop.not_null_dim_products_product_key.a98dfddb9a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect product_key\nfrom mds_prod.CORE.dim_products\nwhere product_key is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-03T12:23:09.755257Z", "completed_at": "2025-01-03T12:23:09.771337Z"}, {"name": "execute", "started_at": "2025-01-03T12:23:09.772339Z", "completed_at": "2025-01-03T12:23:09.773339Z"}], "thread_id": "Thread-1", "execution_time": 0.020132780075073242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_jaffle_shop.unique_dim_products_product_key.5837b56652", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    product_key as unique_field,\n    count(*) as n_records\n\nfrom mds_prod.CORE.dim_products\nwhere product_key is not null\ngroup by product_key\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-03T12:23:09.777338Z", "completed_at": "2025-01-03T12:23:09.788566Z"}, {"name": "execute", "started_at": "2025-01-03T12:23:09.790181Z", "completed_at": "2025-01-03T12:23:09.790181Z"}], "thread_id": "Thread-1", "execution_time": 0.015066862106323242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_jaffle_shop.not_null_fact_orders_order_key.e893eb60e4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_key\nfrom mds_prod.CORE.fact_orders\nwhere order_key is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-03T12:23:09.795935Z", "completed_at": "2025-01-03T12:23:09.811266Z"}, {"name": "execute", "started_at": "2025-01-03T12:23:09.813337Z", "completed_at": "2025-01-03T12:23:09.813337Z"}], "thread_id": "Thread-1", "execution_time": 0.020315170288085938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_jaffle_shop.relationships_fact_orders_customer_key__customer_key__ref_dim_customers_.27f3f75b94", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select customer_key as from_field\n    from mds_prod.CORE.fact_orders\n    where customer_key is not null\n),\n\nparent as (\n    select customer_key as to_field\n    from mds_prod.CORE.dim_customers\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-03T12:23:09.818492Z", "completed_at": "2025-01-03T12:23:09.837194Z"}, {"name": "execute", "started_at": "2025-01-03T12:23:09.838597Z", "completed_at": "2025-01-03T12:23:09.838597Z"}], "thread_id": "Thread-1", "execution_time": 0.021651268005371094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_jaffle_shop.relationships_fact_orders_product_key__product_key__ref_dim_products_.bc8e7ded36", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select product_key as from_field\n    from mds_prod.CORE.fact_orders\n    where product_key is not null\n),\n\nparent as (\n    select product_key as to_field\n    from mds_prod.CORE.dim_products\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-03T12:23:09.844820Z", "completed_at": "2025-01-03T12:23:09.868940Z"}, {"name": "execute", "started_at": "2025-01-03T12:23:09.870667Z", "completed_at": "2025-01-03T12:23:09.870667Z"}], "thread_id": "Thread-1", "execution_time": 0.028026580810546875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_jaffle_shop.unique_fact_orders_order_key.1d8f1532d5", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    order_key as unique_field,\n    count(*) as n_records\n\nfrom mds_prod.CORE.fact_orders\nwhere order_key is not null\ngroup by order_key\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-03T12:23:09.877224Z", "completed_at": "2025-01-03T12:23:09.891385Z"}, {"name": "execute", "started_at": "2025-01-03T12:23:09.893906Z", "completed_at": "2025-01-03T12:23:09.893906Z"}], "thread_id": "Thread-1", "execution_time": 0.019739151000976562, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_jaffle_shop.not_null_dim_stores_store_key.5820f7371e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect store_key\nfrom mds_prod.CORE.dim_stores\nwhere store_key is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-03T12:23:09.900744Z", "completed_at": "2025-01-03T12:23:09.915348Z"}, {"name": "execute", "started_at": "2025-01-03T12:23:09.916377Z", "completed_at": "2025-01-03T12:23:09.916377Z"}], "thread_id": "Thread-1", "execution_time": 0.019176483154296875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_jaffle_shop.relationships_fact_orders_store_key__store_key__ref_dim_stores_.8077f277e5", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select store_key as from_field\n    from mds_prod.CORE.fact_orders\n    where store_key is not null\n),\n\nparent as (\n    select store_key as to_field\n    from mds_prod.CORE.dim_stores\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-03T12:23:09.922510Z", "completed_at": "2025-01-03T12:23:09.939167Z"}, {"name": "execute", "started_at": "2025-01-03T12:23:09.939945Z", "completed_at": "2025-01-03T12:23:09.939945Z"}], "thread_id": "Thread-1", "execution_time": 0.020899057388305664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_jaffle_shop.unique_dim_stores_store_key.d146828e53", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    store_key as unique_field,\n    count(*) as n_records\n\nfrom mds_prod.CORE.dim_stores\nwhere store_key is not null\ngroup by store_key\nhaving count(*) > 1\n\n\n", "relation_name": null}], "elapsed_time": 19.60074210166931, "args": {"quiet": false, "static_parser": true, "require_resource_names_without_spaces": false, "write_json": true, "source_freshness_run_project_hooks": false, "partial_parse_file_diff": true, "require_explicit_package_overrides_for_builtin_materializations": true, "profiles_dir": "C:\\Users\\Temitope\\.dbt", "populate_cache": true, "defer": false, "project_dir": "C:\\airflow\\dbt\\dbt_jaffle_shop", "warn_error_options": {"include": [], "exclude": []}, "log_format": "default", "print": true, "show_resource_report": false, "static": false, "use_colors_file": true, "introspect": true, "indirect_selection": "eager", "log_level": "info", "log_path": "C:\\airflow\\dbt\\dbt_jaffle_shop\\logs", "which": "generate", "log_level_file": "debug", "invocation_command": "dbt docs generate", "compile": true, "printer_width": 80, "send_anonymous_usage_stats": true, "log_file_max_bytes": 10485760, "log_format_file": "debug", "enable_legacy_logger": false, "vars": {}, "exclude": [], "favor_state": false, "partial_parse": true, "cache_selected_only": false, "empty_catalog": false, "use_colors": true, "strict_mode": false, "version_check": true, "macro_debugging": false, "select": []}}